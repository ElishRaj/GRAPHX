{
  "version": 3,
  "sources": ["../../src/lib/AtomMap.ts"],
  "sourcesContent": ["import { atom, Atom, transact, UNINITIALIZED } from '@tldraw/state'\nimport { assert } from '@tldraw/utils'\n\n/**\n * A drop-in replacement for Map that stores values in atoms and can be used in reactive contexts.\n * @public\n */\nexport class AtomMap<K, V> implements Map<K, V> {\n\tprivate valueMap: Map<K, Atom<V | UNINITIALIZED>>\n\tprivate presentKeysAtom: Atom<ReadonlySet<K>>\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tentries?: Iterable<[K, V]>\n\t) {\n\t\tconst presentKeys = new Set<K>()\n\t\tconst valueMap = new Map<K, Atom<V>>()\n\t\tif (entries) {\n\t\t\tfor (const [k, v] of entries) {\n\t\t\t\tpresentKeys.add(k)\n\t\t\t\tvalueMap.set(k, atom(`${name}:${String(k)}`, v))\n\t\t\t}\n\t\t}\n\t\tthis.valueMap = valueMap\n\t\tthis.presentKeysAtom = atom(`${name}:presentKeys`, presentKeys)\n\t}\n\n\t/** @internal */\n\tgetAtom(key: K): Atom<V | UNINITIALIZED> | undefined {\n\t\tconst valueAtom = this.valueMap.get(key)\n\t\tif (!valueAtom) {\n\t\t\t// if the value is missing, we want to track whether it's in the present keys set\n\t\t\tthis.presentKeysAtom.get()\n\t\t\treturn undefined\n\t\t}\n\t\treturn valueAtom\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst value = this.getAtom(key)?.get()\n\t\tassert(value !== UNINITIALIZED)\n\t\treturn value\n\t}\n\n\t__unsafe__getWithoutCapture(key: K): V | undefined {\n\t\tconst valueAtom = this.valueMap.get(key)\n\t\tif (!valueAtom) return undefined\n\t\tconst value = valueAtom.__unsafe__getWithoutCapture()\n\t\tassert(value !== UNINITIALIZED)\n\t\treturn value\n\t}\n\n\thas(key: K): boolean {\n\t\tconst valueAtom = this.getAtom(key)\n\t\tif (!valueAtom) {\n\t\t\treturn false\n\t\t}\n\t\treturn valueAtom.get() !== UNINITIALIZED\n\t}\n\n\t__unsafe__hasWithoutCapture(key: K): boolean {\n\t\tconst valueAtom = this.valueMap.get(key)\n\t\tif (!valueAtom) return false\n\t\tassert(valueAtom.__unsafe__getWithoutCapture() !== UNINITIALIZED)\n\t\treturn true\n\t}\n\n\tset(key: K, value: V) {\n\t\ttransact(() => {\n\t\t\tconst existingAtom = this.valueMap.get(key)\n\t\t\tif (existingAtom) {\n\t\t\t\texistingAtom.set(value)\n\t\t\t} else {\n\t\t\t\tthis.valueMap.set(key, atom(`${this.name}:${String(key)}`, value))\n\t\t\t\tthis.presentKeysAtom.update((keys) => {\n\t\t\t\t\tconst newKeys = new Set(keys)\n\t\t\t\t\tnewKeys.add(key)\n\t\t\t\t\treturn newKeys\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\treturn this\n\t}\n\n\tupdate(key: K, updater: (value: V) => V) {\n\t\treturn transact(() => {\n\t\t\tconst valueAtom = this.valueMap.get(key)\n\t\t\tif (!valueAtom) {\n\t\t\t\tthrow new Error(`AtomMap: key ${key} not found`)\n\t\t\t}\n\t\t\tconst value = valueAtom.__unsafe__getWithoutCapture()\n\t\t\tassert(value !== UNINITIALIZED)\n\t\t\tvalueAtom.set(updater(value))\n\t\t})\n\t}\n\n\tdelete(key: K) {\n\t\treturn transact(() => {\n\t\t\tconst valueAtom = this.valueMap.get(key)\n\t\t\tif (!valueAtom) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tthis.valueMap.delete(key)\n\t\t\tvalueAtom.set(UNINITIALIZED)\n\t\t\tthis.presentKeysAtom.update((keys) => {\n\t\t\t\tconst newKeys = new Set(keys)\n\t\t\t\tnewKeys.delete(key)\n\t\t\t\treturn newKeys\n\t\t\t})\n\t\t\treturn true\n\t\t})\n\t}\n\n\tdeleteMany(keys: Iterable<K>): [K, V][] {\n\t\treturn transact(() => {\n\t\t\tlet newPresentKeys\n\t\t\tconst deleted: [K, V][] = []\n\n\t\t\tfor (const key of keys) {\n\t\t\t\tconst valueAtom = this.valueMap.get(key)\n\t\t\t\tif (!valueAtom) continue\n\t\t\t\tconst oldValue = valueAtom.get()\n\t\t\t\tassert(oldValue !== UNINITIALIZED)\n\n\t\t\t\tdeleted.push([key, oldValue])\n\n\t\t\t\tthis.valueMap.delete(key)\n\t\t\t\tvalueAtom.set(UNINITIALIZED)\n\t\t\t\tif (!newPresentKeys) {\n\t\t\t\t\tnewPresentKeys = new Set(this.presentKeysAtom.__unsafe__getWithoutCapture())\n\t\t\t\t}\n\t\t\t\tnewPresentKeys.delete(key)\n\t\t\t}\n\n\t\t\tif (newPresentKeys) {\n\t\t\t\tthis.presentKeysAtom.set(newPresentKeys)\n\t\t\t}\n\n\t\t\treturn deleted\n\t\t})\n\t}\n\n\tclear() {\n\t\treturn transact(() => {\n\t\t\tfor (const valueAtom of this.valueMap.values()) {\n\t\t\t\tvalueAtom.set(UNINITIALIZED)\n\t\t\t}\n\t\t\tthis.presentKeysAtom.set(new Set())\n\t\t\tthis.valueMap.clear()\n\t\t})\n\t}\n\n\t*entries(): Generator<[K, V], undefined, unknown> {\n\t\t// dereference the presentKeysAtom to make sure we track insertions\n\t\tthis.presentKeysAtom.get()\n\t\t// then iterate over the valueMap so we get values inserted during iteration\n\t\tfor (const [key, valueAtom] of this.valueMap.entries()) {\n\t\t\tconst value = valueAtom.get()\n\t\t\tassert(value !== UNINITIALIZED)\n\t\t\tyield [key, value]\n\t\t}\n\t}\n\n\t*keys(): Generator<K, undefined, unknown> {\n\t\t// dereference the presentKeysAtom to make sure we track insertions\n\t\tthis.presentKeysAtom.get()\n\t\t// then iterate over the valueMap so we get keys inserted during iteration\n\t\tfor (const key of this.valueMap.keys()) {\n\t\t\tyield key\n\t\t}\n\t}\n\n\t*values(): Generator<V, undefined, unknown> {\n\t\t// dereference the presentKeysAtom to make sure we track insertions\n\t\tthis.presentKeysAtom.get()\n\t\t// then iterate over the valueMap so we get values inserted during iteration\n\t\tfor (const valueAtom of this.valueMap.values()) {\n\t\t\tconst value = valueAtom.get()\n\t\t\tassert(value !== UNINITIALIZED)\n\t\t\tyield value\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tget size() {\n\t\treturn this.presentKeysAtom.get().size\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: AtomMap<K, V>) => void, thisArg?: any): void {\n\t\tfor (const [key, value] of this.entries()) {\n\t\t\tcallbackfn.call(thisArg, value, key, this)\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries()\n\t}\n\n\t[Symbol.toStringTag] = 'AtomMap'\n}\n"],
  "mappings": "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",
  "names": []
}
